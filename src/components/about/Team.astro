---
import { getCurrentLocale, getTranslations } from '../../utils/i18n';

const currentLocale = getCurrentLocale(Astro.url);
const t = getTranslations(currentLocale);

const team = t.teamData;

// アイコンリンク取得関数（zennLinkを優先、なければlink）
function getIconLink(item) {
  return item.zennLink || item.link || null;
}
---

<section class="py-16 sm:py-20">
  <div class="mx-auto max-w-2xl px-4 sm:px-6 lg:max-w-7xl lg:px-8">
    <div class="sm:space-8 space-y-12">
      <h2 class="text-3xl font-medium tracking-tight sm:text-4xl">{t.team.title}</h2>
      <ul role="list" class="grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-3">
        {
          team.map((item) => (
            <li
              class={`rounded-3xl border border-primary-900/10 px-6 py-8 dark:border-primary-300/10 ${
                item.comingSoon ? 'bg-gray-200 dark:bg-gray-700' : ''
              }`}
            >
              <div class="space-y-6">
                {/* アイコンリンク（zennLink優先、なければlink） */}
                {(() => {
                  const iconLink = getIconLink(item);
                  return iconLink ? (
                    <a href={iconLink} target="_blank" rel="noopener noreferrer" aria-label={`${item.name}のプロフィールページを新しいタブで開く`}>
                      <picture>
                        <img
                          class="mx-auto h-auto w-16 rounded-full"
                          src={item.image}
                          alt={item.name}
                          width="64"
                          height="64"
                          loading="lazy"
                        />
                      </picture>
                    </a>
                  ) : (
                    <picture>
                      <img
                        class="mx-auto h-auto w-16 rounded-full"
                        src={item.image}
                        alt={item.name}
                        width="64"
                        height="64"
                        loading="lazy"
                      />
                    </picture>
                  );
                })()}
                <div class="text-center">
                  <h3 class="text-lg font-medium">
                    {item.comingSoon ? 'Coming Soon...' : item.name}
                  </h3>
                  <p
                    class={`text-base text-primary-950/70 dark:text-primary-200/70 ${
                      item.comingSoon ? 'hidden' : ''
                    }`}
                  >
                    {item.job}
                  </p>
                  {item.description && (
                    <p class="mt-2 text-sm text-primary-950/70 dark:text-primary-200/70">
                      {item.description}
                    </p>
                  )}
                </div>
              </div>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</section>
