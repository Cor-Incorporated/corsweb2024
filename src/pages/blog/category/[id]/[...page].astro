---
import type { GetStaticPaths, Page } from 'astro';
import { getCollection } from 'astro:content';
import PostCard from '../../../../components/blog/PostCard.astro';
import Layout from '../../../../layouts/Layout.astro';
import { getCurrentLocale } from '../../../../utils/i18n';

interface Props {
  page: Page<any>;
  id: string;
}

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  // Get all Japanese blog posts from Content Collections
  const allPosts = await getCollection('blog', ({ data }) => {
    return data.lang === 'ja' && !data.isDraft;
  });
  
  // Get available categories
  const categories = Array.from(new Set(allPosts.map(p => p.data.category)));

  const paths = categories.flatMap((category: string) => {
    const filtered = allPosts.filter(p => p.data.category === category);
    const sorted = filtered.sort(
      (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
    );
    return paginate(sorted, { 
      pageSize: 12, 
      params: { id: category },
      props: { categoryId: category }
    });
  });
  return paths;
};

const { page } = Astro.props as Props;
const id: string = (Astro.params.id as string | undefined) ?? (Astro.props as any).categoryId ?? '';
const currentLocale = getCurrentLocale(Astro.url);

const catLabelMap: Record<string, { ja: string; en: string }> = {
  'ai': { ja: 'AI', en: 'AI' },
  'engineering': { ja: 'エンジニアリング', en: 'Engineering' },
  'founder': { ja: '創業', en: 'Founder' },
  'lab': { ja: 'ラボ', en: 'Lab' },
};

const categoryLabel = catLabelMap[id]?.[currentLocale === 'ja' ? 'ja' : 'en'] ?? `Unknown Category (${id})`;
const pageTitle = `${categoryLabel} | Blog | Cor.inc`;
const pageDescription = currentLocale === 'ja'
  ? `${categoryLabel} に属するブログ記事一覧` : `Blog posts in ${categoryLabel}`;

// 「すべて」リンクのアクティブ判定
const isAllActive = !id || !(id in catLabelMap);

---

<Layout title={pageTitle} description={pageDescription}>
  <div class="mx-auto max-w-7xl px-4 py-16 sm:px-6 lg:px-8">
    <!-- Page Header -->
    <div class="mb-12 text-center">
      <h1 class="mb-4 text-4xl font-bold text-stone-900 dark:text-stone-100 sm:text-5xl">
        {categoryLabel}
      </h1>
      <p class="mx-auto max-w-2xl text-lg text-stone-600 dark:text-stone-300">
        {pageDescription}
      </p>
      
      <!-- Pagination Info -->
      {page.total > page.size && (
        <p class="mt-4 text-sm text-stone-500 dark:text-stone-400">
          {currentLocale === 'ja' 
            ? `${page.total}記事中 ${page.start + 1}-${page.end + 1}記事を表示 (${page.currentPage}/${page.lastPage}ページ)`
            : `Showing ${page.start + 1}-${page.end + 1} of ${page.total} articles (Page ${page.currentPage} of ${page.lastPage})`
          }
        </p>
      )}
    </div>

    <!-- Category Filter -->
    <div class="mb-8 flex flex-wrap justify-center gap-2">
      <a
        href={currentLocale === 'ja' ? '/blog' : '/en/blog'}
        class={`rounded-full px-4 py-2 text-sm font-medium border-2 transition-all duration-200 ${
          isAllActive
            ? 'bg-black text-white border-black dark:bg-white dark:text-black dark:border-white'
            : 'bg-white text-black border-gray-300 hover:bg-gray-50 dark:bg-black dark:text-white dark:border-gray-600 dark:hover:bg-gray-900'
        }`}
      >
        {currentLocale === 'ja' ? 'すべて' : 'All'}
      </a>
      {Object.entries(catLabelMap).map(([categoryId, labels]) => (
        <a
          href={currentLocale === 'ja' ? `/blog/category/${categoryId}` : `/en/blog/category/${categoryId}`}
          class={`rounded-full px-4 py-2 text-sm font-medium border-2 transition-all duration-200 ${
            categoryId === id
              ? 'bg-black text-white border-black dark:bg-white dark:text-black dark:border-white'
              : 'bg-white text-black border-gray-300 hover:bg-gray-50 dark:bg-black dark:text-white dark:border-gray-600 dark:hover:bg-gray-900'
          }`}
        >
          {labels[currentLocale === 'ja' ? 'ja' : 'en']}
        </a>
      ))}
    </div>

    <!-- 記事グリッド -->
    <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
      {page.data.map(post => (
        <PostCard post={post} />
      ))}
    </div>

    <!-- ページネーション -->
    {page.lastPage > 1 && (
      <nav class="mt-12 flex items-center justify-center gap-2" aria-label="Pagination">
        <a
          href={page.url.prev ? `/blog/category/${id}${page.url.prev}` : '#'}
          class={`rounded-lg px-3 py-2 text-sm font-medium ${
            !page.url.prev
              ? 'cursor-not-allowed bg-stone-100 text-stone-400 dark:bg-stone-700 dark:text-stone-500'
              : 'bg-stone-100 text-stone-700 hover:bg-stone-200 dark:bg-stone-700 dark:text-stone-200 dark:hover:bg-stone-600'
          }`}
          aria-disabled={!page.url.prev}
        >
          {currentLocale === 'ja' ? '前へ' : 'Previous'}
        </a>

        <div class="flex gap-1">
          {Array.from({ length: page.lastPage }, (_, i) => i + 1).map(num => (
            <a
              href={num === 1 ? `/blog/category/${id}` : `/blog/category/${id}/${num}`}
              class={`rounded-lg px-3 py-2 text-sm font-medium ${
                num === page.currentPage
                  ? 'bg-blue-600 text-white'
                  : 'bg-stone-100 text-stone-700 hover:bg-stone-200 dark:bg-stone-700 dark:text-stone-200 dark:hover:bg-stone-600'
              }`}
              aria-current={num === page.currentPage ? 'page' : undefined}
            >
              {num}
            </a>
          ))}
        </div>

        <a
          href={page.url.next ? `/blog/category/${id}${page.url.next}` : '#'}
          class={`rounded-lg px-3 py-2 text-sm font-medium ${
            !page.url.next
              ? 'cursor-not-allowed bg-stone-100 text-stone-400 dark:bg-stone-700 dark:text-stone-500'
              : 'bg-stone-100 text-stone-700 hover:bg-stone-200 dark:bg-stone-700 dark:text-stone-200 dark:hover:bg-stone-600'
          }`}
          aria-disabled={!page.url.next}
        >
          {currentLocale === 'ja' ? '次へ' : 'Next'}
        </a>
      </nav>
    )}
  </div>
</Layout> 